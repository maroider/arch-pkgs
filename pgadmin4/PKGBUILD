pkgname=pgadmin4
pkgver=9.7
pkgrel=1
pkgdesc='The pgAdmin desktop interface, built from source, with some limitations.'
arch=('x86_64')
license=('PostgreSQL')
url='https://www.pgadmin.org/'
makedepends=('wget' 'npm' 'unzip')
depends=('python' 'postgresql-libs' 'krb5' 'electron35')
provides=('pgadmin4')
source=(
    pgadmin4-${pkgver}.tar.gz::"https://ftp.postgresql.org/pub/pgadmin/pgadmin4/v${pkgver}/source/pgadmin4-${pkgver}.tar.gz"
    "config_local.py"
)
sha256sums=('02d462d1d2ba9167ed718f34d2cd111689792f891edf7113b177ed640adba589'
            'eb7893eba416794cb1ce085f7c1244b83544278f9e8b42d903d3bf87cc241fe0')

build() {
    # corepack is needed later by the pgAdmin's build process
    mkdir -p corepack/bin
    corepack enable yarn --install-directory=corepack/bin
    export PATH="$PWD/corepack/bin:$PATH"

    cd "$srcdir/pgadmin4-${pkgver}"
    cp ../config_local.py web/

    export PYTHONDONTWRITEBYTECODE=1

    # Use pgAdmin's existing Linux build automation
    source pkg/linux/build-functions.sh
    # trap 'ERRCODE=$? && if [ ${ERRCODE} -ne 0 ]; then echo "The command \"${BASH_COMMAND}\" failed in \"${FUNCNAME}\" with exit code ${ERRCODE}."; fi' EXIT
    _setup_env "$PWD/pkg/linux/DUMMY-PATH-COMPONENT" "arch"
    _setup_dirs
    _create_python_virtualenv "arch"
    _build_runtime
    _copy_code "arch"
}

package() {
    bld="${srcdir}/pgadmin4-${pkgver}/arch-build"
    cp -R "${bld}/server/usr" "${pkgdir}"
    cp -R "${bld}/desktop/usr" "${pkgdir}"
}

